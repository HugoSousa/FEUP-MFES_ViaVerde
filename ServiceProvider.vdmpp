class ServiceProvider

instance variables
	public name: seq1 of char;
	public services: set of Service := {};
	
operations

  public ServiceProvider : seq1 of char ==> ServiceProvider
	 ServiceProvider(nome) == (
		name := nome;
		return self;
	);

	public addService : Service ==> ()
	addService(serv) == (
	
		Condition`assertTrue(
    	serv.getAllNodes() inter getAllNodes() = {}
    );
	
    services := services union {serv};
	);
	
	public getAllNodes : () ==> set of Node
	getAllNodes() == (
    dcl nodes: set of Node := {};
    
    for all service in set services do
    	nodes := nodes union service.getAllNodes();
    	
  	return nodes;
	);
	
	--retorna o custo da passagem
	public passa : Client * Node * Time * [Record] ==> real
	passa(client, node, time, last_record) == (
		
			dcl all_nodes : set of Node := {};
			dcl used_service : Service;
		
		 	for all service in set services do(
				all_nodes := service.getAllNodes();
				if(node in set all_nodes) then 
					used_service := service;
			);
		
			return used_service.passa(client, node, time, last_record);
	);
	
end ServiceProvider