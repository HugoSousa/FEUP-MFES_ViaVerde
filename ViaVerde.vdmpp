class ViaVerde

  types
  	public Nome = seq1 of char;
  	
  values
	--    
	instance variables
	  private clients : set of Client := {};
	  private service_providers : set of ServiceProvider := {};
	  private records : seq of Record := [];
	  
  	--inv not exists node in set getAllNodes() & card node > 1;
  
  --operations
  operations
  
  --adiciona um cliente
  public addClient(cliente: Client) ==
  (
    clients := clients union {cliente};
    IO`println(clients);
  )
    post 
     	clients <> {};
  
  --remove um cliente   	
  public removeClient(cliente: Client) == 
  ( 	
  	--IO`println(cliente.name);
  	--clientes := clientes \ {cliente};
  	--percorrer o set e comparar o nome
  	dcl c1 : Client;
  	c1 := iota c in set clients & c.id = cliente.id;
  	
		clients := clients \ {c1};
		
		-- IO`println(clients);
  );
	
	--adiciona uma parceria com um fornecedor de servicos (parque estacionamento, auto-estradas, etc.)
	public addServiceProvider(provider: ServiceProvider) == (
		service_providers := service_providers union {provider};
    IO`println(service_providers);
	);
		
	public passa(cliente: Client, no : Node, data: Date) == (
	  dcl estab : ServiceProvider;
	  dcl cost : real;
	  dcl new_record : Record;
		estab := getServiceProviderByNode(no);
		cost := estab.passa(cliente, no, data, getRecordByClient(cliente));
		new_record := new Record(cliente, no, data, estab, cost);
		records := records ^ [new_record];
		
	);

	--remove uma parceria com um fornecedor de servicos
	public removeServiceProvider(provider: ServiceProvider) == 
  ( 	
  	dcl sp1 : ServiceProvider;
  	sp1 := iota sp in set service_providers & sp.id = provider.id;
  	
		service_providers := service_providers \ {sp1};
		
		-- IO`println(clients);
  );
  
  
  public getAllNodes : () ==> set of Node
	 getAllNodes() == (
	 	dcl all_nodes: set of Node := {};
	 	
	 	for all service_provider in set service_providers do
    	all_nodes := all_nodes union service_provider.getAllNodes();
    	
  	return all_nodes;
	 );
	 
	 public getRecordByClient : Client ==> seq of Record
	 getRecordByClient(client) == (
	 	--TODO ESTA FUNCAo
  	return records;
	 );
	 
	 
	 
	 public getServiceProviderByNode : Node  ==> ServiceProvider
	 getServiceProviderByNode(node) == (
	 	--TODO ESTA FUNCAo
  	return (new ServiceProvider());
	 );
	 

functions
   
end ViaVerde
